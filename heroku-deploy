#!/usr/bin/env bash

## Push to Heroku
##
## Because Heroku doesn't clearly support Python / Node hybrid projects I've
## hacked together this script to facilitate deploying to Heroku. The idea is
## to build everything Node is needed for locally, commit the build artifacts,
## and push that to Heroku. This way all we need from Heroku is a Python
## runtime.
##
## So the way it works is we clone our upstream (e.g. the GitHub origin repo)
## into a scratch temp directory on our system. Then build the node artificats,
## i.e. using npm, grunt, bower, etc. Then we commit those artifacts using git
## and push to Heroku. We don't push to origin (probably GitHub) because we
## don't want to version control the build artifacts. We delete the scratch
## repo when we're done.

RDIO_API_KEY="XXXXXXXXXXXXXXXXXXXXXXXX"
RDIO_API_SECRET="XXXXXXXXXX"

function choice {
    CHOICE=''
    local prompt="$*"
    local answer
    read -p "$prompt" answer
    case "$answer" in
        [yY1] ) CHOICE='y';;
        [nN0] ) CHOICE='n';;
        *     ) CHOICE='n';;
    esac
}

echo "Push to Heroku?"
echo "We'll clone a scratch copy of this repo and alter it in a temp directory."
echo "After pushing to Heroku the scratch copy will be removed."
echo
choice "Is this okay? [y/N] "

if [[ "$CHOICE" == "y" ]]; then
    # use a temp repo so our alterations don't get reused
    tmpdir=$(mktemp -d -t bingio)

    # find upstream git repo url
    upstream=$(git remote show origin | grep -o -m1 "https://.*$")

    # clone repo and push into it
    git clone $upstream $tmpdir
    pushd $tmpdir

    # run make-prod
    ./make-prod

    # need to remove package.json so Heroku doesn't assume node.js app
    git rm package.json

    # pick a sed binary
    type gsed && sedbin=gsed || sedbin=sed

    # remove dist/ from .gitignore and add it to index
    $($sedbin --in-place "s/dist//" .gitignore)
    git add dist/

    git ci -am 'auto-generated heroku release'

    git remote add heroku git@heroku.com:bingio.git

    # need to force because upstream will have different history
    git push --force heroku master

    # cleanup temp repo
    popd
    rm -rf $tmpdir

    # set the env vars
    heroku config:set RDIO_API_KEY=${RDIO_API_KEY}
    heroku config:set RDIO_API_SECRET=${RDIO_API_SECRET}
fi